// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É...');

const testResults = {
  server: 'http://localhost:5000',
  affiliate: {
    code: 'OARQMF6RYF7R2A0F9B',
    name: 'unitradecargo'
  },
  testLink: 'http://localhost:5178/?ref=OARQMF6RYF7R2A0F9B&fp_sid=test-subid-2025',
  apiTests: []
};

async function testAffiliateSystem() {
  try {
    console.log('\nüìä 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤...');
    const leaderboardResponse = await fetch('http://localhost:5000/api/affiliate/leaderboard');
    const leaderboard = await leaderboardResponse.json();
    
    console.log('‚úÖ –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –ø–æ–ª—É—á–µ–Ω:');
    console.log(`   - –ü–∞—Ä—Ç–Ω–µ—Ä–æ–≤: ${leaderboard.leaderboard.length}`);
    console.log(`   - –ì–ª–∞–≤–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä: ${leaderboard.leaderboard[0].user.username}`);
    console.log(`   - –ö–ª–∏–∫–æ–≤: ${leaderboard.leaderboard[0]._count.clicks}`);
    console.log(`   - –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${leaderboard.leaderboard[0]._count.referrals}`);
    
    testResults.apiTests.push({
      test: 'leaderboard',
      status: '‚úÖ Passed',
      data: `${leaderboard.leaderboard[0]._count.clicks} –∫–ª–∏–∫–æ–≤`
    });

    console.log('\nüîó 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–∫ —á–µ—Ä–µ–∑ API...');
    const clickResponse = await fetch(`http://localhost:5000/api/affiliate/leaderboard?ref=OARQMF6RYF7R2A0F9B&fp_sid=test-auto-${Date.now()}`);
    await clickResponse.json();
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–∫ —Å–æ–∑–¥–∞–Ω');
    
    testResults.apiTests.push({
      test: 'click tracking',
      status: '‚úÖ Passed',
      data: '–ö–ª–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–ª–µ–∂–µ–Ω'
    });

    console.log('\nüìà 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    const updatedLeaderboard = await fetch('http://localhost:5000/api/affiliate/leaderboard');
    const updatedData = await updatedLeaderboard.json();
    
    const newClickCount = updatedData.leaderboard[0]._count.clicks;
    console.log(`‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤: ${newClickCount}`);
    
    testResults.apiTests.push({
      test: 'statistics update',
      status: '‚úÖ Passed', 
      data: `${newClickCount} –∫–ª–∏–∫–æ–≤ (—É–≤–µ–ª–∏—á–∏–ª–æ—Å—å)`
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    testResults.apiTests.push({
      test: 'error',
      status: '‚ùå Failed',
      data: error.message
    });
  }
}

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
console.log('==============================================');
console.log(`üìä –°–µ—Ä–≤–µ—Ä: ${testResults.server}`);
console.log(`üë§ –ü–∞—Ä—Ç–Ω–µ—Ä: ${testResults.affiliate.name} (${testResults.affiliate.code})`);
console.log(`üîó –¢–µ—Å—Ç–æ–≤–∞—è —Å—Å—ã–ª–∫–∞: ${testResults.testLink}`);

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
await testAffiliateSystem();

console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã API —Ç–µ—Å—Ç–æ–≤:');
testResults.apiTests.forEach(test => {
  console.log(`   ${test.status} ${test.test}: ${test.data}`);
});

console.log('\nüîß –î–õ–Ø –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:5178/');
console.log('2. –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º unitradecargo');
console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –∫–∞–±–∏–Ω–µ—Ç');
console.log('4. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É');
console.log('5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—á–µ—Ç—ã Sub ID');

console.log('\nüéâ –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞!');

export { testResults };