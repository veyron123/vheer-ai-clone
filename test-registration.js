// –¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const axios = require('axios');

const testRegistration = async () => {
  try {
    console.log('üß™ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    const response = await axios.post('http://localhost:5000/auth/register', {
      email: `test-${Date.now()}@example.com`,
      username: `test-user-${Date.now()}`,
      password: 'test123456',
      fullName: 'Test User –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'
    });
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', response.data.user);
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.response?.data || error.message);
  }
};

testRegistration();