import React from 'react';
import InlineMockupGenerator from './InlineMockupGenerator';

const MockupSection = ({ 
  imageUrl, 
  aspectRatio, 
  aiModel,
  scale,
  autoShow = true 
}) => {
  // DEBUG: –õ–æ–≥–∏—Ä—É–µ–º —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç MockupSection
  console.log('üìã MockupSection received:', { imageUrl, aspectRatio, aiModel, scale, autoShow });
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–∫–∞–ø
  const canShowMockup = () => {
    if (!imageUrl) {
      console.log('‚ùå MockupSection: No imageUrl provided');
      return false;
    }
    
    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–æ–¥–µ–ª–∏
    const supportedModels = [
      'gpt-image', 
      'qwen-image', 
      'nano-banana',
      'flux-pro', 
      'flux-max',
      'flux-dev',
      'flux-schnell'
    ];
    
    // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è
    const supportedRatios = ['match', '1:1', '16:9', '9:16', '4:3', '3:4'];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
    const modelSupported = !aiModel || supportedModels.includes(aiModel);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
    const ratioSupported = !aspectRatio || supportedRatios.includes(aspectRatio);
    
    console.log('üîç MockupSection checks:', { 
      modelSupported, 
      ratioSupported, 
      aiModel, 
      aspectRatio,
      finalResult: modelSupported && ratioSupported 
    });
    
    return modelSupported && ratioSupported;
  };

  if (!canShowMockup()) {
    return null;
  }

  return (
    <InlineMockupGenerator
      imageUrl={imageUrl}
      aspectRatio={aspectRatio || '1:1'}
      scale={scale}
      autoShow={autoShow}
    />
  );
};

export default MockupSection;